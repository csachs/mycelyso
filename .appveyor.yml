version: 0.0.1-{build}

image: Visual Studio 2017

clone_depth: 1

environment:
  CONDA: C:\Miniconda36-x64

before_build:
  - cmd: set PATH=%CONDA%;%CONDA%\Scripts;%CONDA%\Library\bin;%PATH%
  - cmd: conda config --add channels conda-forge
  - cmd: conda config --add channels bioconda
  - cmd: conda config --add channels csachs
  - cmd: conda update -y conda
  # unfortunately current pyinstaller in conda does not work with python 3.6
  - cmd: pip install git+https://github.com/pyinstaller/pyinstaller

build_script:
  - cmd: conda install -y molyso
  - cmd: conda install -y numpy scipy matplotlib nd2file tifffile scikit-image networkx pytables numexpr pandas tunable tqdm mfisp-boxdetection pyasn1
  - cmd: conda install -y mpld3
  - cmd: pip install mycelyso-inspector
  - cmd: curl https://raw.githubusercontent.com/modsim/mycelyso-inspector/master/mycelyso_inspector/inspector.py -O %CONDA%\Lib\site-packages\mycelyso_inspector\inspector.py
  - cmd: python setup.py install
  - cmd: del %CONDA%\Scripts\molyso.py
  # this is the starter, full of implicit exports to steer pyinstaller into the right direction
  - cmd: echo import multiprocessing >> runmycelyso.py
  - cmd: echo import pyasn1 >> runmycelyso.py
  - cmd: echo from pyasn1.codec.der.encoder import encode as der_encode >> runmycelyso.py
  - cmd: echo from pyasn1.codec.der.decoder import decode as der_decode >> runmycelyso.py
  - cmd: echo from pyasn1.codec.native.encoder import encode as native_encode >> runmycelyso.py
  - cmd: echo from tunable.schema import tunable_schema as schema, ASN1_SCHEMA_VERSION >> runmycelyso.py
  - cmd: echo import molyso >> runmycelyso.py
  - cmd: echo import pywt._extensions._cwt >> runmycelyso.py
  - cmd: echo from mycelyso.highlevel.pipeline import Mycelyso >> runmycelyso.py
  - cmd: "echo if __name__ == '__main__': >> runmycelyso.py"
  - cmd: "echo     multiprocessing.freeze_support() >> runmycelyso.py"
  - cmd: "echo     Mycelyso().main() >> runmycelyso.py"
  #
  - cmd: echo import sys >> runmycelysoinspector.py
  - cmd: echo import png.png >> runmycelysoinspector.py
  - cmd: echo import mycelyso_inspector.inspector >> runmycelysoinspector.py
  - cmd: "echo if __name__ == '__main__': >> runmycelysoinspector.py"
  - cmd: "echo     mycelyso_inspector.inspector.main() >> runmycelysoinspector.py"
  #
  - cmd: pyinstaller runmycelyso.py -n mycelyso --exclude-module tcl --exclude-module tk --exclude-module _tkinter --exclude-module tkinter --exclude-module Tkinter --exclude-module opencv --exclude-module cv2
  - cmd: pyinstaller runmycelysoinspector.py -n mycelyso_inspector --exclude-module tcl --exclude-module tk --exclude-module _tkinter --exclude-module tkinter --exclude-module Tkinter --exclude-module opencv --exclude-module cv2
  #--exclude-module PyQt5 --exclude-module PySide
  - cmd: rd /s /q .\dist\mycelyso\Include
  - cmd: rd /s /q .\dist\mycelyso_inspector\Include
  - ps: Copy-Item -Recurse %CONDA%\Lib\site-packages\mycelyso_inspector\static .\dist\mycelyso_inspector\
  - ps: Copy-Item -Recurse .\dist\mycelyso_inspector\* .\dist\mycelyso\
  # would be nice to get rid of more unnecessary parts of the bundle, but pyinstaller bundled programs seem to be very fragile

after_build:
  - cmd: >
          7z
          a
          mycelyso-windows64.zip
          .\dist\mycelyso

artifacts:
  - path: mycelyso-windows64.zip

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
